verbose-outputs:
  default: false
  description: If `true`, outputs command registration and unregistration logs in the console
silent-logs:
  default: false
  description: If `true`, turns off all logging from the CommandAPI, except for errors
messages:
  missing-executor-implementation:
    default: "This command has no implementations for %s"
    description: |
      The message to display to senders when a command has no executor. 
      
      Available parameters are:
          `%s` - the executor class (lowercase) e.g. `craftplayer`
          `%S` - the executor class (normal case) e.g. `CraftPlayer`
create-dispatcher-json:
  default: false
  description: |
    If `true`, the CommandAPI creates a `command_registration.json` file showing the mapping of registered commands.
    
    This is designed to be used by developers - setting this to `false` will improve command registration performance.
    
    The `command_registration.json` JSON representation of commands is in the same format as Minecraft's [_Data Generators_ Commands report](https://wiki.vg/Data_Generators#Commands_report).
    
    The format is Brigadier's command graph - more information about the JSON format can be found [here](https://wiki.vg/Command_Data).
use-latest-nms-version:
  default: false
  description: |
    Controls whether the CommandAPI should use the latest NMS implementation for command registration and execution.
    
    This setting can be used to run the CommandAPI on Minecraft versions higher than it can support.
    
    For example, if the CommandAPI supports Minecraft 1.18 and Minecraft 1.18.1 comes out, you can use this to enable support for 1.18.1 before an official CommandAPI release comes out that supports 1.18.1.
    
    ::: warning
    This feature is very experimental and should only be used if you know what you are doing. 
    
    In almost every case, it is better to wait for an official CommandAPI release that supports the latest version of Minecraft. 
    
    Using `use-latest-nms-version` is _not_ guaranteed to work and can cause unexpected side effects!
    :::
be-lenient-for-minor-versions:
  default: false
  description: |
    Controls whether the CommandAPI should be more lenient when updating to a new Minecraft version.
  
    Similar to the [`use-latest-nms-version`](#use-latest-nms-version) setting, this can allow the CommandAPI to run on a version higher than it officially supports. 
    
    As an example, this setting can allow updating to 1.21.2 from 1.21.1 but doesn't allow updating to 1.22 from 1.21.2.
    
    ::: warning

    Take the warning from the [`use-latest-nms-version`](#use-latest-nms-version) and apply it here too. This is _not_ guaranteed to work either and also may cause unexpected side effects.

    :::
hook-paper-reload:
  default: true
  description: |
    Controls whether the CommandAPI hooks into the Paper-exclusive `ServerResourcesReloadedEvent` when available.
  
    When the CommandAPI detects it is running on a Paper-based server, its default behavior will be to hook into the `ServerResourcesReloadedEvent`, which triggers when `/minecraft:reload` is run. During this event, the CommandAPI runs a custom datapack reloading sequence that helps commands registered with the CommandAPI work within datapacks. See [Reloading datapacks](./internal#reloading-datapacks) for more information on this process.
  
    By default, this value is set to `true` and the CommandAPI will hook into the `ServerResourcesReloadedEvent`. If you want, you can set this to `false`, and the CommandAPI will not hook into this event.
skip-initial-datapack-reload:
  default: false
  description: |
    Controls whether the CommandAPI should perform its initial datapack reload when the server has finished loading.
  
    The CommandAPI automatically reloads all datapacks in a similar fashion to `/minecraft:reload` in order to propagate CommandAPI commands into datapack functions and tags. This operation may cause a slight delay to server startup and is not necessary if you are not using datapacks or functions that use CommandAPI commands. This operation can be skipped by setting this value to `true`.
  
    Note that datapacks will still be reloaded if performed manually when `hook-paper-reload` is set to `true` and you run `/minecraft:reload`.
plugins-to-convert:
  default: '[]'
  description: |
    Controls the list of plugins to process for command conversion. 
    
    See [Command conversion](command-conversion/conversion) for more information.
other-commands-to-convert:
  default: '[]'
  description: |
    A list of other commands to convert. This should be used for commands which are not declared in a `plugin.yml` file. 
    
    See [Arbitrary command conversion](command-conversion/single-command#arbitrary-command-conversion) for more information.
skip-sender-proxy:
  default: '[]'
  description: |
    Determines whether the proxy sender should be skipped when converting a command.
    
    See [Skipping proxy senders](command-conversion/skip-proxy-senders.md) for more information.